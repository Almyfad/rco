name: Deploy Helios API

on:
  push:
    paths:
      - 'helios/api/**'
      - '.github/workflows/helios-api-ci.yml'
    branches:
      - main
      - develop
      - 'release/**'
  workflow_dispatch:

env:
  ASPNETCORE_ENVIRONMENT: Production
  MYSQL_DATABASE: ${{ vars.MYSQL_DATABASE }}
  MYSQL_USER: ${{ vars.MYSQL_USER }}
  MYSQL_HOST: ${{ vars.MYSQL_HOST }}
  MYSQL_PORT: ${{ vars.MYSQL_PORT }}
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
  Configurations__jwt__secret: ${{ secrets.Configurations__jwt__secret }}

jobs:
  build:
    runs-on: self-hosted
    outputs:
      env: ${{ steps.set_env.outputs.env }}
      short_env: ${{ steps.set_env.outputs.short_env }}
    steps:
      - uses: actions/checkout@v4

      - name: Set environment from branch
        id: set_env
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          if [[ "$BRANCH" == "main" ]]; then
            echo "env=production" >> $GITHUB_OUTPUT
            echo "short_env=prod" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH" =~ ^release.* ]]; then
            echo "env=staging" >> $GITHUB_OUTPUT
            echo  "short_env=staging" >> $GITHUB_OUTPUT
          else
            echo "env=development" >> $GITHUB_OUTPUT
            echo 
          fi

      - name: Build Docker image
        run: cd helios && docker build -f api/Dockerfile --force-rm -t helios:latest .

      - name: Generate compose to $HOME
        run: |
          mkdir -p $HOME/helios
          cp helios/api/Dockerfile $HOME/helios/Dockerfile
            docker compose -f helios/docker-compose.yml -f helios/docker-compose.${{ steps.set_env.outputs.short_env }}.yml config > $HOME/helios/docker-compose.${{ steps.set_env.outputs.short_env }}.yml

  deploy:
    needs: build
    runs-on: self-hosted
    environment: ${{ needs.build.outputs.env }}
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x

      - name: Install EF Core Tools
        run: dotnet tool install --global dotnet-ef --version 9.*

      - name: Add EF Core Tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./helios/api

      - name: Apply EF Core Migrations
        run: |
         echo "Applying migrations for HeliosDataBaseContext..."
         echo "Using connection string: $MYSQL_HOST:$MYSQL_PORT"
         echo "Using database: $MYSQL_DATABASE"
         echo "Using user: $MYSQL_USER"
         dotnet ef database update --configuration Release
        working-directory: ./helios/HeliosDataBaseContext

      - name: Deploy to ${{ needs.build.outputs.env }}
        run: cd $HOME/helios && docker compose  -f $HOME/helios/docker-compose.${{ needs.build.outputs.short_env }}.yml up -d --build --force-recreate
